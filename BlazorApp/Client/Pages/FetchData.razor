@page "/fetchdata"
@using wasmwithids.Shared
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider


<PageTitle>Product list</PageTitle>

<h1>Product list</h1>

<p>This component demonstrates fetching data from an external server.</p>

<AuthorizeView>
    <NotAuthorized>
        Sign In to see the data
    </NotAuthorized>
    <Authorized>
        @if (products == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <table class="table">
                <thead>
                <tr>
                    <th>Id</th>
                    <th>Name</th>
                    <th>Category</th>
                    <th>SubCategory</th>
                    <th>Price</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var product in products)
                {
                    <tr>
                        <td>@product.ProductId</td>
                        <td>@product.ProductName</td>
                        <td>@product.Category</td>
                        <td>@product.SubCategory</td>
                        <td>@product.PricePerUnit</td>
                    </tr>
                }
                </tbody>
            </table>
        }
    </Authorized>
</AuthorizeView>

@code {
    private List<Product> products;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider
            .GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity is not null && user.Identity.IsAuthenticated)
        {
            var response = await Http.GetAsync("/api/product/GetAllProducts");
            if (response.IsSuccessStatusCode)
            {
                products = await response.Content.ReadFromJsonAsync<List<Product>>();
            }
            else if (response.StatusCode == System.Net.HttpStatusCode.Unauthorized)
            {
                
            }
        }
    }
}
